name: CI
on:
  push:
    branches:
      - 'main'
  pull_request:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Build message'
        required: false

jobs:
  pre-commit:
    name: check pre-commit
    runs-on: ubuntu-20.04
    if: ${{ github.repository == 'sermojohn/gitmono' }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - uses: actions/setup-go@v2
        with:
          stable: true
          go-version: '1.17'
      - name: Install dependencies
        run: |
          go version
          go get -u golang.org/x/lint/golint
          go get github.com/sqs/goreturns
          go get github.com/golangci/golangci-lint/cmd/golangci-lint@v1.40.0
      - uses: pre-commit/action@v2.0.3

  release:
    if: ${{ github.repository == 'sermojohn/gitmono' && github.event_name == 'pull_request' }}
    needs: [pre-commit]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check binary build
        run: |
          make build
          chmod +x ./gitmono/gitmono
          git clean -fd

      - name: Release new version
        run: |
          git fetch origin --tags --unshallow
          curl -Ls https://github.com/sermojohn/gitmono/releases/download/v0.6.4/gitmono_0.6.4_linux_amd64.tar.gz --output - | gunzip -c | tar xopf - -O gitmono>gitmono && chmod +x gitmono
          # TODO replace commit with github.sha
          ./gitmono release -p . -c {{ github.event.pull_request.head.sha }} --commit-scheme=conventional --version-prefix=v
          git push --tags origin
          git clean -fd

      - name: Deploy release
        run: |
          curl -sL https://git.io/goreleaser | bash -s -- --parallelism=2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
